[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "darwin"
version = "1.0.0"
description = "Interactive genetic algorithm optimization suite with MCP server and Panel dashboard"
authors = ["DevQ.ai Team <team@devq.ai>"]
license = "BSD-3-Clause"
readme = "README.md"
homepage = "https://github.com/devqai/darwin"
repository = "https://github.com/devqai/darwin"
documentation = "https://darwin.devq.ai/docs"
keywords = ["genetic-algorithm", "optimization", "mcp", "panel", "evolutionary-computation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{include = "darwin", from = "src"}]

[tool.poetry.dependencies]
python = "^3.12"
# Core optimization
pygad = "^3.4.0"
numpy = "^1.24.0"
scipy = "^1.11.0"
pandas = "^2.0.0"
scikit-learn = "^1.3.0"

# Testing (required in main dependencies per test requirements)
pytest = "^7.4.0"

# Web framework and MCP
fastapi = "^0.100.0"
uvicorn = {extras = ["standard"], version = "^0.23.0"}
pydantic = "^2.0.0"
httpx = "^0.24.0"
websockets = "^10.4"
aiohttp = "^3.8.0"

# Dashboard and visualization
panel = "^1.3.0"
bokeh = "^3.3.0"
matplotlib = "^3.7.0"
seaborn = "^0.12.0"
plotly = "^5.15.0"

# Data storage
surrealdb = "^0.3.0"
redis = "^4.6.0"
sqlalchemy = "^2.0.0"
alembic = "^1.11.0"

# Monitoring and observability
logfire = "^3.0.0"
prometheus-client = "^0.17.0"
structlog = "^23.1.0"

# Utilities
typer = "^0.9.0"
rich = "^13.4.0"
python-dotenv = "^1.0.0"
pyyaml = "^6.0.0"
click = "^8.1.0"
jupyter = "^1.0.0"
pyjwt = "^2.10.1"
argon2-cffi = "^25.1.0"

[tool.poetry.group.dev.dependencies]
# Testing
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
pytest-xdist = "^3.3.0"
pytest-mock = "^3.11.0"
hypothesis = "^6.82.0"

# Code quality
black = "^23.7.0"
isort = "^5.12.0"
mypy = "^1.5.0"
ruff = "^0.0.280"
pre-commit = "^3.3.0"
bandit = "^1.7.0"

# Documentation
mkdocs = "^1.5.0"
mkdocs-material = "^9.1.0"
mkdocstrings = {extras = ["python"], version = "^0.22.0"}

# Development tools
jupyter = "^1.0.0"
ipykernel = "^6.25.0"
notebook = "^7.0.0"
docker = "^7.1.0"
toml = "^0.10.2"

[tool.poetry.group.benchmark.dependencies]
# Performance testing
memory-profiler = "^0.61.0"
py-spy = "^0.3.0"
line-profiler = "^4.1.0"
pytest-benchmark = "^4.0.0"

[tool.poetry.scripts]
darwin = "darwin.cli:main"
darwin-server = "darwin.mcp.server:main"
darwin-dashboard = "darwin.dashboard.app:main"

[tool.poetry.extras]
all = ["redis", "prometheus-client"]
mcp = ["fastapi", "uvicorn", "websockets"]
dashboard = ["panel", "bokeh"]
monitoring = ["logfire", "prometheus-client"]

# Black code formatting
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort import sorting
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["darwin"]
known_third_party = ["pygad", "fastapi", "panel", "bokeh"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

# MyPy type checking
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "pygad.*",
    "surrealdb.*",
    "panel.*",
    "bokeh.*",
    "logfire.*"
]
ignore_missing_imports = true

# Ruff linting
[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011", "B018"]

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=darwin",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=85",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "benchmark: marks tests as benchmark tests",
    "mcp: marks tests for MCP functionality",
    "dashboard: marks tests for dashboard functionality",
]

# Coverage configuration
[tool.coverage.run]
source = ["src/darwin"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Bandit security linting
[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B101", "B601"]

# Pre-commit hooks configuration reference
[tool.poetry.urls]
"Bug Tracker" = "https://github.com/devqai/darwin/issues"
"Discussions" = "https://github.com/devqai/darwin/discussions"
"Changelog" = "https://github.com/devqai/darwin/blob/main/CHANGELOG.md"
